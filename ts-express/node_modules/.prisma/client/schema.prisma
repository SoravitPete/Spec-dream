// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type component {
  CPU         CPUComponent
  Casing      CasingComponent
  GPU         GPUComponent
  Motherboard MotherboardComponent
  PSU         PSUComponent
  RAM         RAMComponent
}

type CPUComponent {
  base_clock     Float
  brand          String
  cores          Int
  multi_threaded Boolean
  name           String
  price          Float
  socket         String
}

type CasingComponent {
  formfactor String
  name       String
  price      Float
  rgb        Boolean
}

type GPUComponent {
  brand   String
  chipset String
  name    String
  price   Float
  vram    Int
  wattage String
}

type MotherboardComponent {
  formfactor String
  max_memory Int
  name       String
  price      Float
  socket     String
}

type PSUComponent {
  name    String
  price   Float
  wattage Int
}

type RAMComponent {
  capacity Int
  name     String
  price    Float
  rgb      Boolean
}

model User {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  accountName String      @unique
  firstName   String
  lastName    String
  email       String      @unique
  password    String
  mobileNo    String
  birthday    DateTime
  picture     String
  spec        component[]
  created     DateTime    @default(now())
  updated     DateTime    @updatedAt
  UserThread  Thread[]    @relation("userThread")
  UserComment Comment[]   @relation("userComment")
}

model Thread {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  context       String
  created       DateTime  @default(now())
  updated       DateTime  @updatedAt
  userId        String?   @db.ObjectId
  User          User?     @relation("userThread", fields: [userId], references: [id])
  ThreadComment Comment[] @relation("threadComment")
}

model Comment {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  context  String
  created  DateTime @default(now())
  updated  DateTime @updatedAt
  userId   String?  @db.ObjectId
  User     User?    @relation("userComment", fields: [userId], references: [id])
  threadId String?  @db.ObjectId
  Thread   Thread?  @relation("threadComment", fields: [threadId], references: [id])
}
